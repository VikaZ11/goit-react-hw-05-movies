{"version":3,"file":"static/js/597.bb1e536a.chunk.js","mappings":"uUAIaA,EAAY,kCAGzBC,EAAAA,EAAAA,SAAAA,QALc,gCAMdA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QANc,mCAOdC,SALW,SAQN,IAAMC,EAAiB,mCAAG,6GAENH,EAAAA,EAAAA,IAAA,sBAFM,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,QAAQC,IAAI,KAAMC,SALW,yDAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,EAAAA,IAAA,6BAAgCW,IAD1B,cACvBP,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKfM,EAAY,mCAAG,WAAMC,GAAN,uFACHb,EAAAA,EAAAA,IAAA,gBAAmBa,IADhB,cACpBT,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZS,EAAY,mCAAG,WAAMD,GAAN,uFACHb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,aADG,cACpBT,EADoB,yBAEnBA,EAASC,KAAKU,MAFK,2CAAH,sDAKZC,EAAc,mCAAG,WAAMH,GAAN,uFACLb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,aADK,cACtBT,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,qD,8ECP3B,UAzBa,WACX,IAAQW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAaG,GAASM,KAAKF,EAC5B,GAAE,CAACJ,IAECG,GAKH,wBACGA,EAAMI,KAAI,SAAAT,GAAI,OACb,2BACE,gBAAKU,IAAG,UAAK1B,EAAAA,IAAL,OAAiBgB,EAAKW,cAAgBC,IAAG,UAAKZ,EAAKa,SAC3D,uBAAIb,EAAKa,QACT,uCAAeb,EAAKc,eAHbd,EAAKF,GADD,MALV,IAcV,C","sources":["api.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = 'f39ff6961706954b4bce0deacf0d5670';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w200';\nconst lang = 'en-US';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReview = async id => {\n  const response = await axios.get(`movie/${id}/reviews`);\n  return response.data.results;\n}","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from 'api';\nimport { IMAGE_URL } from 'api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState(null);\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCasts);\n  }, [movieId]);\n\n  if (!casts) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {casts.map(cast => (\n        <li key={cast.id}>\n          <img src={`${IMAGE_URL}${cast.profile_path}`} alt={`${cast.name}`} />\n          <p>{cast.name}</p>\n          <p>Character: {cast.character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["IMAGE_URL","axios","api_key","language","getTrendingMovies","response","data","results","console","log","message","getSearchMovies","query","getMovieById","id","getMovieCast","cast","getMovieReview","movieId","useParams","useState","casts","setCasts","useEffect","then","map","src","profile_path","alt","name","character"],"sourceRoot":""}