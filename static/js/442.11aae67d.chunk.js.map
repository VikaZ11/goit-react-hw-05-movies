{"version":3,"file":"static/js/442.11aae67d.chunk.js","mappings":"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","sources":["api.js","components/MoviesList.styled.js","components/MoviesList.jsx","page/Movies.styled.js","components/SearchBox.styled.js","components/SearchBox.jsx","page/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = 'f39ff6961706954b4bce0deacf0d5670';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w200';\nconst lang = 'en-US';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReview = async id => {\n  const response = await axios.get(`movie/${id}/reviews`);\n  return response.data.results;\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 52px;\n`;\n\nexport const CardWrapper = styled.div`\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { IMAGE_URL } from 'api';\nimport { Container, CardWrapper, MovieName } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img src={`${IMAGE_URL}${movie.poster_path}`} alt={movie.title} />\n            <MovieName>{movie.title}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  right: 6px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 0;\n  padding: 6px 8px 6px 8px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper, Input, Icon, Button } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onSearch, onChangeFilter }) => {\n  return (\n    <Wrapper onSubmit={onSearch}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n      <Button type=\"submit\">\n        <Icon />\n      </Button>\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  value: PropTypes.string,\n  onSearch: PropTypes.func,\n  onChangeFilter: PropTypes.func,\n};","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from 'api';\nimport { MoviesList } from 'components/MoviesList';\nimport { Container } from './Movies.styled';\nimport { SearchBox } from 'components/SearchBox';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(() => searchParams.get('query') ?? '');\n\n  const movieTitle = searchParams.get('query');\n\n  const onChangeFilter = query => {\n    setQuery(query);\n  };\n\n  const onSearch = e => {\n    e.preventDefault();\n\n    setSearchParams(query !== '' ? { query: query } : {});\n  };\n\n  useEffect(() => {\n    if (movieTitle) {\n      getSearchMovies(movieTitle).then(setMovies);\n    }\n  }, [movieTitle]);\n\n  return (\n    <Container>\n      <SearchBox\n        value={query}\n        onSearch={onSearch}\n        onChangeFilter={onChangeFilter}\n      />\n\n      {movies && <MoviesList movies={movies} />}\n\n      {movies && movies.length === 0 && (\n        <div>Nothing was found with that name ðŸ˜•</div>\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["IMAGE_URL","axios","api_key","language","getTrendingMovies","response","data","results","console","log","message","getSearchMovies","query","getMovieById","id","getMovieCast","cast","getMovieReview","Container","styled","CardWrapper","MovieName","MoviesList","movies","location","useLocation","map","movie","to","state","from","src","poster_path","alt","title","Wrapper","Input","Icon","HiSearch","Button","SearchBox","value","onSearch","onChangeFilter","onSubmit","type","name","onChange","e","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","setQuery","movieTitle","useEffect","then","preventDefault","length"],"sourceRoot":""}